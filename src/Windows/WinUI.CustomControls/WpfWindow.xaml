<Window
    x:Class="WinUI.CustomControls.WpfWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behave="using:WinUI.CustomControls.Behaviors"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:media="using:Microsoft.UI.Xaml.Media"    
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"    
    xmlns:local="using:WinUI.CustomControls"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    mc:Ignorable="d">
    <!--
        Warning : When using the drag move feature, it attaches to the Window's Content.  If the content does not
        have a color assigned, it will not register pointer down events.
        
        Size is set to stretch so we can use as much space as possible for dragging.
        
        **Bug/Issue/Misunderstanding?**
        Note that the WindowRootGrid custom control will not work in code behind for some odd reason.  Only
        in XAML.  I am guessing this is a WinUI Preview Version 1 bug or a Jason Brower bug!  However, i just
        couldn't instantiate any custom class that inherits from a Panel/Grid.  I have not tried other
        custom controls to see if the problem extends beyond a Grid/Panel class.  To test this out I subclassed
        Grid then instantiated an instance and added it as the Window.Content.  This led to exceptions, but
        when I replaced the custom Grid class with a normal Grid, it worked fine.
    -->
    <Grid
        HorizontalAlignment="Stretch"
        VerticalAlignment="Stretch"
        Background="Transparent"
        DoubleTapped="RootGrid_DoubleTapped">
        <!--
            For those developers who come from a WPF background like myself, the reason that I attach the
            DragMoveBehavior to a class that is some sort of "Panel" rather than the Window itself is due
            to the fact that the WinUI Window is not a DepedencyObject.  DepedencyObject is required as
            the generic type for a Behavior.
        -->
        <interactivity:Interaction.Behaviors>
            <behave:DragMoveBehavior />
        </interactivity:Interaction.Behaviors>
        <local:WindowRootGrid x:Name="RootGrid" />
    </Grid>
</Window>
