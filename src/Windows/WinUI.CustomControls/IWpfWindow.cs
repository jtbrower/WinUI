// MIT License
//
// Author  : Jason T. Brower
// 
// Permission is hereby granted, free of charge, to any person obtaining a copy
// of this software and associated documentation files (the "Software"), to deal
// in the Software without restriction, including without limitation the rights
// to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
// copies of the Software, and to permit persons to whom the Software is
// furnished to do so, subject to the following conditions:
// 
// The above copyright notice and this permission notice shall be included in all
// copies or substantial portions of the Software.
// 
// THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
// IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
// FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
// AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
// LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
// OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
// SOFTWARE.
namespace WinUI.CustomControls
{
    using Microsoft.UI.Xaml;
    using System;

    ////////////////////////////////////////////////////////////////////////////////////////////////////
    /// <summary>   Interface for WPF window. </summary>
    ////////////////////////////////////////////////////////////////////////////////////////////////////

    public interface IWpfWindow
    {
        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the XAML root. </summary>
        ///
        /// <value> The XAML root. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        XamlRoot XamlRoot { get;}

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Size to content. </summary>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        void SizeToContent();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets the handle. </summary>
        ///
        /// <value> The handle. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        public IntPtr Handle { get; }

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Gets or sets the content. </summary>
        ///
        /// <value> The content. </value>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        UIElement? Content { get;set;}

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Converts this  to a window. </summary>
        ///
        /// <returns>   A Window. </returns>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        Window AsWindow();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Removes the border. </summary>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        void RemoveBorder();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Adds border. </summary>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        void AddBorder();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Maximizes this.  </summary>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        void Maximize();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Minimizes this.  </summary>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        void Minimize();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Restores this.  </summary>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        void Restore();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Resizes. </summary>
        ///
        /// <param name="width">    The width. </param>
        /// <param name="height">   The height. </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        void Resize(int width,int height);

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Sets a transparency. </summary>
        ///
        /// <param name="percentTransparent">   The percent transparent. </param>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        void SetTransparency(int percentTransparent);

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Removes the transparency. </summary>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        void RemoveTransparency();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Closes this.  </summary>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        void Close();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Enables the automatic scale on DPI change. </summary>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        void EnableAutoScaleOnDpiChange();

        ////////////////////////////////////////////////////////////////////////////////////////////////////
        /// <summary>   Disables the automatic scale on DPI change. </summary>
        ////////////////////////////////////////////////////////////////////////////////////////////////////

        void DisableAutoScaleOnDpiChange();
    }
}
