<Page
    x:Class="Oceanside.WinUI.Sample.App.View.MainPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:behave="using:Oceanside.WinUI.Base.Behaviors"
    xmlns:controls="using:Microsoft.Toolkit.Uwp.UI.Controls"
    xmlns:converters="using:Microsoft.Toolkit.Uwp.UI.Converters"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:extensions="using:Microsoft.Toolkit.Uwp.UI.Extensions"
    xmlns:interactivity="using:Microsoft.Xaml.Interactivity"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:media="using:Microsoft.Toolkit.Uwp.UI.Media"
    xmlns:muxc="using:Microsoft.UI.Xaml.Controls"
    mc:Ignorable="d">
    <Page.Resources>
        <!--  Button style just so I can keep them the same width and apply a small margin.  -->
        <Style TargetType="Button">
            <Setter Property="MinWidth" Value="200" />
            <Setter Property="Margin" Value="1" />
            <Setter Property="VerticalAlignment" Value="Top" />
        </Style>
        <!--
            This is a brush that I use to paint the background of a Virtual Keyboard component that I wrote
            for my point-of-sale application.
        -->
        <LinearGradientBrush
            x:Key="KeyboardBackgroundBrush"
            MappingMode="Absolute"
            StartPoint="411,362"
            EndPoint="411,93">
            <LinearGradientBrush.GradientStops>
                <GradientStopCollection>
                    <GradientStop Offset="0.81" Color="#B9B7BB" />
                    <GradientStop Offset="0.86" Color="#B9B7BB" />
                    <GradientStop Offset="0.92" Color="#E2E7E9" />
                    <GradientStop Offset="0.95" Color="#D9DFE1" />
                    <GradientStop Offset="0.96" Color="#B2B5B8" />
                    <GradientStop Offset="0.98" Color="#9C9C9D" />
                </GradientStopCollection>
            </LinearGradientBrush.GradientStops>
            <LinearGradientBrush.Transform>
                <TransformGroup>
                    <RotateTransform Angle="-0.05" />
                    <TranslateTransform X="-107.34" Y="-98.92" />
                </TransformGroup>
            </LinearGradientBrush.Transform>
        </LinearGradientBrush>
        <Style x:Key="KeyboardBorderStyle" TargetType="Border">
            <Setter Property="BorderThickness" Value="1" />
            <Setter Property="CornerRadius" Value="10" />
            <Setter Property="BorderBrush" Value="DarkGray" />
            <Setter Property="Background" Value="{StaticResource KeyboardBackgroundBrush}" />
        </Style>
    </Page.Resources>
    <Grid
        x:Name="MainGrid"
        HorizontalAlignment="Center"
        VerticalAlignment="Center"
        controls:DockPanel.Dock="Bottom"
        Background="Transparent">

        <!--
            By using the RoundedDropShadowBehavior, a Canvas and a Rectangle will be inserted right here.
        -->
        <Border x:Name="MainContentBorder" Style="{StaticResource KeyboardBorderStyle}">
            <interactivity:Interaction.Behaviors>
                <behave:RoundedDropShadowBehavior CornerRadius="10" />
            </interactivity:Interaction.Behaviors>
            
            <Grid Margin="5">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="Auto" />
                </Grid.ColumnDefinitions>
                
                <StackPanel
                    Grid.Column="0"
                    Margin="5"
                    VerticalAlignment="Center">
                    
                    <CheckBox
                        Command="{x:Bind Vm.ToggleNonClientVisibilityButtonVm.ClickedCmd, Mode=OneWay}"
                        CommandParameter="{x:Bind Vm, Mode=OneWay}"
                        Content="{x:Bind Vm.ToggleNonClientVisibilityButtonVm.DisplayContent, Mode=OneWay}"
                        IsChecked="{x:Bind Vm.ToggleNonClientVisibilityButtonVm.IsChecked, Mode=TwoWay}"
                        IsThreeState="False" />
                    
                    <StackPanel Orientation="Horizontal">
                        
                        <Button
                        Command="{x:Bind Vm.AddWindowTransparencyButtonVm.ClickedCmd, Mode=OneWay}"
                        CommandParameter="{x:Bind Vm, Mode=OneWay}"
                        Content="{x:Bind Vm.AddWindowTransparencyButtonVm.DisplayContent, Mode=OneWay}"
                        IsEnabled="{x:Bind Vm.AddWindowTransparencyButtonVm.IsEnabled, Mode=OneWay}" />

                        <muxc:NumberBox
                            LargeChange="20"
                            Maximum="100"
                            Minimum="0"
                            SmallChange="5"
                            SpinButtonPlacementMode="Inline"
                            ValidationMode="InvalidInputOverwritten"
                            Value="{x:Bind Path=Vm.WindowTransparencyPercent, Mode=TwoWay}" />

                    </StackPanel>
                    
                    <Button
                        Command="{x:Bind Vm.RemoveWindowTransparencyButtonVm.ClickedCmd, Mode=OneWay}"
                        CommandParameter="{x:Bind Vm, Mode=OneWay}"
                        Content="{x:Bind Vm.RemoveWindowTransparencyButtonVm.DisplayContent, Mode=OneWay}"
                        IsEnabled="{x:Bind Vm.RemoveWindowTransparencyButtonVm.IsEnabled, Mode=OneWay}" />
                    
                    <Button
                        Command="{x:Bind Vm.SizeToContentButtonVm.ClickedCmd, Mode=OneWay}"
                        CommandParameter="{x:Bind Vm, Mode=OneWay}"
                        Content="{x:Bind Vm.SizeToContentButtonVm.DisplayContent, Mode=OneWay}"
                        IsEnabled="{x:Bind Vm.SizeToContentButtonVm.IsEnabled, Mode=OneWay}" />
                </StackPanel>
            </Grid>
        </Border>
    </Grid>
</Page>